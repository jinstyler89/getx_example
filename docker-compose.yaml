services:
  api:
    build: ./backend
    container_name: "backend-api-example"
    ports:
    - "3000:3000"
  redis:
    image: redis:latest
    command: redis-server --port 6379
    container_name: "backend-redis-example"
    labels:
      - "name=redis"
      - "mode=standalone"
    volumes:
      - ./data/redis:/data
    ports:
      - 6379:6379
  # db:
  #   image: postgres
  #   container_name: "backend-db"
  #   restart: always
  #   environment:
  #     POSTGRES_PASSWORD: caonima1314
  #   ports:
  #     - 5432:5432
  # adminer:
  #   container_name: "backend-adminer"
  #   image: adminer
  #   restart: always
  #   ports:
  #     - 8080:8080

  # zookeeper:
  #   container_name: 'backend-zookeeper'
  #   image: 'bitnami/zookeeper:latest'
  #   ports:
  #     - '2181:2181'
  #   environment:
  #     - ALLOW_ANONYMOUS_LOGIN=yes
  #   networks:
  #     - moonlight-networks
  # kafka:
  #   image: 'bitnami/kafka:latest'
  #   platform: linux/amd64
  #   container_name: "backend-kafka"
  #   ports:
  #     - '9092:9092'
  #   environment:
  #     - KAFKA_BROKER_ID=1
  #     - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
  #     - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
  #     - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
  #     - ALLOW_PLAINTEXT_LISTENER=yes
  #   networks:
  #     - moonlight-networks
  #   depends_on:
  #     - zookeeper
networks:
  moonlight-networks:
      driver: bridge
  # zoo1:
  #   image: zookeeper
  #   restart: always
  #   hostname: zoo1
  #   ports:
  #     - 2181:2181
  #   environment:
  #     ZOO_MY_ID: 1
  #     ZOO_SERVERS: server.1=zoo1:2888:3888;2181 server.2=zoo2:2888:3888;2181 server.3=zoo3:2888:3888;218
